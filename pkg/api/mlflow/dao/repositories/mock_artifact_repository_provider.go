// Code generated by mockery v2.34.0. DO NOT EDIT.

package repositories

import (
	context "context"

	models "github.com/G-Research/fasttrackml/pkg/api/mlflow/dao/models"
	mock "github.com/stretchr/testify/mock"
)

// MockArtifactRepositoryProvider is an autogenerated mock type for the ArtifactRepositoryProvider type
type MockArtifactRepositoryProvider struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, artifact
func (_m *MockArtifactRepositoryProvider) Create(ctx context.Context, artifact *models.Artifact) error {
	ret := _m.Called(ctx, artifact)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Artifact) error); ok {
		r0 = rf(ctx, artifact)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockArtifactRepositoryProvider creates a new instance of MockArtifactRepositoryProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockArtifactRepositoryProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockArtifactRepositoryProvider {
	mock := &MockArtifactRepositoryProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
